var t=Object.defineProperty,s=(s,i,e)=>((s,i,e)=>i in s?t(s,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[i]=e)(s,"symbol"!=typeof i?i+"":i,e);import{r as i}from"./phaser-UvlxNa5i.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver((t=>{for(const i of t)if("childList"===i.type)for(const t of i.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&s(t)})).observe(document,{childList:!0,subtree:!0})}function s(t){if(t.ep)return;t.ep=!0;const s=function(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),"use-credentials"===t.crossOrigin?s.credentials="include":"anonymous"===t.crossOrigin?s.credentials="omit":s.credentials="same-origin",s}(t);fetch(t.href,s)}}();var e=i();class o extends e.Scene{constructor(){super("Boot")}preload(){this.load.json("animations_json","data/animations.json")}create(){this.scene.start("Preloader")}}class n extends e.Scene{constructor(){super("GameOver"),s(this,"camera"),s(this,"background"),s(this,"gameover_text")}create(){this.camera=this.cameras.main,this.camera.setBackgroundColor(16711680),this.background=this.add.image(512,384,"background"),this.background.setAlpha(.5),this.gameover_text=this.add.text(512,384,"Game Over",{fontFamily:"Arial Black",fontSize:64,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}),this.gameover_text.setOrigin(.5),this.input.once("pointerdown",(()=>{this.scene.start("MainMenu")}))}}const h=768,a=96,r=96;var l=(t=>(t.CHIP_COLLECTED="CHIP_COLLECTED",t.CHIP_REMOVED="CHIP_REMOVED",t.CHIPS_DROPPED="CHIPS_DROPPED",t.CHIP_POINTED="CHIPS_DROPPED",t.CHIPS_SWAPPED="CHIPS_DROPPED",t.CHIPS_START_SWAP="CHIPS_START_SWAP",t.UI_READY="UI_READY",t.UI_CHOOSE_DIF="UI_CHOOSE_DIF",t.SHUFFLE="SHUFFLE",t.AWAIT_USER_ACTION="AWAIT_USER_ACTION",t.USER_ACTION_SWAP="USER_ACTION_SWAP",t.USER_ACTION_SHUFFLE="USER_ACTION_SHUFFLE",t.WIN="WIN",t))(l||{});class _ extends Phaser.Events.EventEmitter{}let d=function(){const t="EMPTY",s="LOCK";return[[[t,s,s,s,t,t,t,t],[t,t,t,t,t,t,t,t],[t,t,t,t,t,t,t,t],[t,s,s,s,t,t,t,t],[t,s,s,s,t,t,t,t],[t,t,t,t,t,t,t,t],[t,t,t,t,t,t,t,t],[t,s,s,s,t,t,t,t]],[[t,t,t,s,t,t,t,t],[t,t,t,s,t,t,t,t],[t,t,t,s,t,t,t,t],[t,t,t,t,t,t,t,t],[t,t,t,t,t,t,t,t],[t,t,t,s,t,t,t,t],[t,t,t,s,t,t,t,t],[t,t,t,s,t,t,t,t]],[[s,t,t,t,t,t,t,t],[s,t,t,t,t,t,t,t],[s,t,s,t,t,t,t,t],[t,t,s,t,s,t,t,t],[t,t,s,t,s,t,t,t],[t,t,t,t,s,t,s,t],[t,t,t,t,t,t,s,t],[t,t,t,t,t,t,s,t]],[[t,t,t,t,t,t,t,t],[t,t,s,s,t,t,t,t],[t,t,t,t,t,t,t,t],[t,t,t,t,t,s,s,t],[t,t,t,t,t,s,s,t],[t,t,t,t,t,t,t,t],[t,t,s,s,t,t,t,t],[t,t,t,t,t,t,t,t]]]}();var p=(t=>(t.LOCK="LOCK",t.EMPTY="EMPTY",t.C1="chip_1",t.C2="chip_2",t.C3="chip_3",t.C4="chip_4",t.C5="chip_5",t.C6="chip_6",t.C7="chip_7",t))(p||{});const c=[["chip_1","chip_2","chip_3","chip_4","chip_5"],["chip_1","chip_2","chip_3","chip_4","chip_5","chip_6"],["chip_1","chip_2","chip_3","chip_4","chip_5","chip_6","chip_7"]],u={WIDTH:8,HEIGHT:8},g=u.HEIGHT*u.WIDTH,C=class t{constructor(){s(this,"_model")}static getModel(){return t.instance||(t.instance=new t),t.instance}generateNewModel(t,s=!0){const i=[],{WIDTH:e,HEIGHT:o}=u;for(let n=0;n<e;n++){i.push([]);for(let s=0;s<o;s++)i[n].push(c[t][Math.floor(Math.random()*c[t].length)])}if(s){const t=d[Math.floor(Math.random()*d.length)];for(let s=0;s<t.length;s++)for(let e=0;e<t[s].length;e++)"LOCK"===t[s][e]&&(i[s][e]=t[s][e])}return i}get model(){return this._model}set model(t){this._model=t}};s(C,"instance");let f=C;const m=class t{constructor(){s(this,"_lvlDifficulty",0),s(this,"_goals")}static getModel(){return t.instance||(t.instance=new t),t.instance}getNewGoals(){const t=[],s=[[p.C1,p.C2,p.C3,p.C4,p.C5],[p.C1,p.C2,p.C3,p.C4,p.C5,p.C6],[p.C1,p.C2,p.C3,p.C4,p.C5,p.C6,p.C7]][this._lvlDifficulty];for(let i=0;i<3;i++){const i=Phaser.Math.RND.between(0,s.length-1),e=s.splice(i,1)[0];t.push({type:e,goal:10})}return this._goals=t,t}get goals(){return this._goals}set lvlDifficulty(t){this._lvlDifficulty=t}get lvlDifficulty(){return this._lvlDifficulty}get isWin(){let t=!0;for(const s of this._goals)s.goal>0&&(t=!1);return t}minusChip(t){let s=!1;for(const i of this._goals)if(i.type===t){i.goal--,i.goal=i.goal<0?0:i.goal,s=!0;break}return s}};s(m,"instance");let w=m;class v{constructor(){s(this,"eventsBus",new _),s(this,"_m3model"),s(this,"_lvlModel"),this._m3model=f.getModel(),this._lvlModel=w.getModel()}}class S extends v{constructor(){super(...arguments),s(this,"_winChipsCounter",0)}collectWinSectors(t,s){this._winChipsCounter=0;for(const i of s)for(const{x:s,y:e}of i.positions){this._winChipsCounter++;const i=t[s][e];i.animationComponent.eventsBus.once(l.CHIP_COLLECTED,this._onCollected,this),i.animationComponent.playCollect()}}_onCollected(t){this._winChipsCounter--,this.eventsBus.emit(l.CHIP_REMOVED,t),0===this._winChipsCounter&&this.eventsBus.emit(l.CHIP_COLLECTED)}}class P extends v{constructor(){super(...arguments),s(this,"_movingChips",[])}drop(t,s,i=0){const e=this._movingChips=[];for(const o of t)for(const t of o)t&&t.isMoving&&e.push(t);s.add({targets:e,y:this._getNewY,duration:500,ease:"Bounce.Out",delay:i,onComplete:this._onCompleteDrop.bind(this)})}_getNewY(t){return t.dropPositionY}_onCompleteDrop(){for(const t of this._movingChips)t.isMoving=!1;this.eventsBus.emit(l.CHIPS_DROPPED)}}class b extends v{getWinClusters(t,s,i){const e=i,o=s,n=[];for(let h=0;h<o;h++){let s=1;for(let i=1;i<e;i++)if(t[h][i]===t[h][i-1]&&t[h][i]!==p.EMPTY&&t[h][i]!==p.LOCK)s++;else{if(s>=3){const e=[];for(let t=0;t<s;t++)e.push({y:i-1-t,x:h});n.push({positions:e,id:t[h][i]})}s=1}if(s>=3){const i=[];for(let t=0;t<s;t++)i.push({y:e-1-t,x:h});n.push({positions:i,id:t[h][e-1]})}}for(let h=0;h<e;h++){let s=1;for(let i=1;i<o;i++)if(t[i][h]===t[i-1][h]&&t[i][h]!==p.EMPTY&&t[i][h]!==p.LOCK)s++;else{if(s>=3){const e=[];for(let t=0;t<s;t++)e.push({y:h,x:i-1-t});n.push({positions:e,id:t[i][h]})}s=1}if(s>=3){const i=[];for(let t=0;t<s;t++)i.push({y:h,x:o-1-t});n.push({positions:i,id:t[o-1][h]})}}return this._mergeOverlappingClusters(n)}_mergeOverlappingClusters(t){const s=[];for(;t.length>0;){let i=t.pop();for(let s=t.length-1;s>=0;s--)t[s].positions.some((t=>i.positions.some((s=>t.y===s.y&&t.x===s.x))))&&(i.positions=i.positions.concat(t[s].positions),t.splice(s,1));s.push(i)}return s}}class I extends v{constructor(){super(...arguments),s(this,"_movingChips",[])}shuffle(t,s,i){const e=this._getAvailablePositions(s);this._shufflePositions(t,s,e);const o=this._movingChips;for(const n of t)for(const t of n)t&&t.isMoving&&o.push(t);i.add({targets:o,y:this._getNewY,x:this._getNewX,duration:500,ease:"Back.easeInOut",onComplete:this._onCompleteShuffle.bind(this)})}_getAvailablePositions(t){const s=[];for(let i=0;i<t.length;i++)for(let e=0;e<t[i].length;e++)t[i][e]!==p.LOCK&&t[i][e]!==p.EMPTY&&s.push({x:i,y:e});return s}_shufflePositions(t,s,i){this._movingChips=[];const e=[];for(let o=0;o<s.length;o++)for(let n=0;n<s[o].length;n++)if(s[o][n]!==p.LOCK&&s[o][n]!==p.EMPTY){const s=Phaser.Math.RND.between(0,i.length-1),h=i.splice(s,1)[0];t[o][n].setNewGridPosition(h.x,h.y),e.push(t[o][n])}for(const o of e)s[o.gridX][o.gridY]=o.typeID,t[o.gridX][o.gridY]=o,o.isMoving,this._movingChips.push(o)}_getNewY(t){return t.dropPositionY}_getNewX(t){return t.dropPositionX}_onCompleteShuffle(){for(const t of this._movingChips)t.isMoving=!1;this.eventsBus.emit(l.SHUFFLE)}}class B extends v{constructor(t,i,e){super(),s(this,"_input"),s(this,"_tweens"),s(this,"_draggedChip"),s(this,"_swapChipA"),s(this,"_swapChipB"),s(this,"_previousSwapChipA"),s(this,"_previousSwapChipB"),s(this,"_board"),s(this,"_model"),s(this,"_bgBoardVfx"),this._tweens=i,this._input=t,this._bgBoardVfx=e}awaitSwap(t,s){this._board=t,this._model=s,this._subscribeInputs()}_subscribeInputs(){const t=this._board;for(let s=0;s<t.length;s++)for(let i=0;i<t[s].length;i++)t[s][i]&&(t[s][i].eventsBus.on(l.CHIP_POINTED,this._onPointed,this),t[s][i].awaitSwap());this._input.on("pointermove",this._onDrag,this),this._input.on("pointerup",this._onPointedUp,this)}_onPointed(t){if(this._draggedChip=t,this._swapChipB&&(this._bgBoardVfx[this._swapChipB.gridX][this._swapChipB.gridY].visible=!1),this._swapChipA){const t=this._swapChipA;this._swapChipB=t,this._bgBoardVfx[t.gridX][t.gridY].visible=!0}this._bgBoardVfx[t.gridX][t.gridY].visible=!0,this._swapChipA=t,this._swapChipB&&this._swapChipA&&this._swapChipB!==this._swapChipA&&(this._canSwap()?this._trySwap(this._swapChipA,this._swapChipB):this._playCantSwap(this._swapChipA,this._swapChipB))}disableUserActions(){this._disableInputs(),this._hideVfx(),this._disablePickedChips()}_playCantSwap(t,s){this.disableUserActions(),this._showVfx(t,s),this._swapChipA=t,this._swapChipB=s,this._tweens.add({targets:t,rotation:Math.PI/18,duration:150,yoyo:!0,ease:"Back.easeInOut"}),this._tweens.add({targets:s,rotation:Math.PI/18,duration:150,yoyo:!0,ease:"Back.easeInOut",onComplete:this._onNotSwap.bind(this)})}_onNotSwap(){this._hideVfx(),this._disablePickedChips(),this._subscribeInputs()}_canSwap(){const t=this._swapChipB,s=this._swapChipA;return!!(t&&s&&t!==s&&(1===Math.abs(t.gridX-s.gridX)&&0===Math.abs(t.gridY-s.gridY)||0===Math.abs(t.gridX-s.gridX)&&1===Math.abs(t.gridY-s.gridY)))}_onDrag(t){if(this._draggedChip){const s=this._draggedChip,i=t.x-this._draggedChip.startDrag.x,e=t.y-this._draggedChip.startDrag.y,o=32,n=this._board;Math.abs(i)>Math.abs(e)&&Math.abs(i)>o?(n[s.gridX+1]&&n[s.gridX+1][s.gridY]&&i>0?this._trySwap(s,n[s.gridX+1][s.gridY]):n[s.gridX-1]&&n[s.gridX-1][s.gridY]&&this._trySwap(s,n[s.gridX-1][s.gridY]),this._draggedChip=void 0):Math.abs(e)>o&&(n[s.gridX][s.gridY+1]&&e>0?this._trySwap(s,n[s.gridX][s.gridY+1]):n[s.gridX][s.gridY-1]&&this._trySwap(s,n[s.gridX][s.gridY-1]),this._draggedChip=void 0)}}_disableInputs(){const t=this._board;for(let s=0;s<t.length;s++)for(let i=0;i<t[s].length;i++)t[s][i]&&(t[s][i].eventsBus.off(l.CHIP_POINTED,this._onPointed,this),t[s][i].disableInput());this._input.off("pointermove",this._onDrag,this),this._input.off("pointerup",this._onPointedUp,this)}_trySwap(t,s){this.eventsBus.emit(l.CHIPS_START_SWAP),this._disableInputs(),this._hideVfx(),this._disablePickedChips(),this._startSwap(t,s)}swapBack(t,s){this._board=t,this._model=s,this._startSwap(this._previousSwapChipB,this._previousSwapChipA,!0)}_showVfx(t,s){const i=this._bgBoardVfx;i[t.gridX][t.gridY].visible=!0,i[s.gridX][s.gridY].visible=!0}_startSwap(t,s,i){this._showVfx(t,s),this._swapChipA=t,this._swapChipB=s;const e={x:t.x,y:t.y},o={x:s.x,y:s.y};this._tweens.add({targets:t,x:o.x,y:o.y,duration:350,ease:i?"Cubic.easeOut":"Back.easeInOut"}),this._tweens.add({targets:s,x:e.x,y:e.y,duration:350,ease:i?"Cubic.easeOut":"Back.easeInOut",onComplete:this._onSwap.bind(this)})}_onPointedUp(){this._draggedChip=void 0}_onSwap(){const t=this._board,s=this._model,i=this._previousSwapChipA=this._swapChipA,e=this._previousSwapChipB=this._swapChipB;this._hideVfx(),this._disablePickedChips(),s[i.gridX][i.gridY]=e.typeID,s[e.gridX][e.gridY]=i.typeID;const o={x:i.gridX,y:i.gridY},n={x:e.gridX,y:e.gridY};t[o.x][o.y]=e,e.setNewGridPosition(o.x,o.y),t[n.x][n.y]=i,i.setNewGridPosition(n.x,n.y),this._hideVfx(),this.eventsBus.emit(l.CHIPS_SWAPPED)}_disablePickedChips(){this._swapChipB=void 0,this._swapChipA=void 0,this._draggedChip=void 0}_hideVfx(){const t=this._bgBoardVfx;this._swapChipB&&(t[this._swapChipB.gridX][this._swapChipB.gridY].visible=!1),this._swapChipA&&(t[this._swapChipA.gridX][this._swapChipA.gridY].visible=!1)}}class y extends v{spawn(t,s,i,e,o,n,h){for(let a=0;a<h.length;a++)for(let t=0;t<h[a].length;t++)if(h[a][t]===p.LOCK){const i=s.get(0,0,"tile");i.spawn(a,t),n.push(i),e.add(i),i.setZ(0)}for(let a=0;a<h.length;a++){o.push([]);for(let s=0;s<h[a].length;s++)if(h[a][s]!==p.LOCK){const e=t.get(0,0,h[a][s]);e.spawnAbove(a,s,-(u.HEIGHT-s),h[a][s]),o[a].push(e),i.add(e)}else o[a].push(void 0)}}updateModel(t,s,i){for(const e of t)for(const{x:t,y:i}of e.positions)s[t][i]=p.EMPTY;this._updatePositions(s,i)}_updatePositions(t,s){for(let i=0;i<t.length;i++)for(let e=t[i].length-1;e>=0;e--)if(t[i][e]===p.EMPTY){const o=this._getFallenChip(i,e,t);if(!o)break;{const n=s[o.x][o.y];t[i][e]=n.typeID,t[o.x][o.y]=p.EMPTY,s[o.x][o.y]=void 0,s[i][e]=n,n.setNewGridPosition(i,e),n.isMoving=!0}}}_getFallenChip(t,s,i){for(let e=s;e>=0;e--)if(i[t][e]!==p.EMPTY&&i[t][e]!==p.LOCK)return{x:t,y:e}}spawnNewChips(t,s,i,e,o){for(let n=0;n<s.length;n++){const h=s[n];for(let a=0;a<h.length;a++)if(h[a]===p.EMPTY){const r=h.length-a-1,l=t.get(0,0,i[n][r]);l.spawnAbove(n,a,-r,i[n][r]),s[n][a]=i[n][r],e[n][a]=l,o.add(l)}}console.log(s),console.log(e)}}class E extends v{constructor(t,i,e,o,n,h,a,r){super(),s(this,"boardCollectWinsComponent",new S),s(this,"findWinClustersComponent",new b),s(this,"updateBoardComponent",new y),s(this,"dropChipsComponent",new P),s(this,"swapComponent"),s(this,"uiBoardEventsBus"),s(this,"shuffleComponent",new I),s(this,"_tweens"),s(this,"_chipsPool"),s(this,"_tilePool"),s(this,"_boardContainer"),s(this,"_tileContainer"),s(this,"_board",[]),s(this,"_tileBoard",[]),s(this,"_wins",[]),this.uiBoardEventsBus=t,this._chipsPool=i,this._tilePool=e,this._boardContainer=o,this._tileContainer=n,this._tweens=a,this.swapComponent=new B(r,a,h),this.boardCollectWinsComponent.eventsBus.on(l.CHIP_REMOVED,this._onChipRemoved,this)}startGame(){this.uiBoardEventsBus.once(l.UI_CHOOSE_DIF,this._onChooseLvl,this)}_onChooseLvl(){this._spawn(),this._playShowBoard()}_playShowBoard(){this.dropChipsComponent.eventsBus.once(l.CHIPS_DROPPED,this._onBoardShowed,this),this.dropChipsComponent.drop(this._board,this._tweens,.5)}_onBoardShowed(){this.uiBoardEventsBus.once(l.UI_READY,this._playGame,this),this.uiBoardEventsBus.emit(l.CHIPS_DROPPED)}_playGame(){this.findWins()}_returnAllChips(){if(this._board&&this._board.length>0){const t=this._board;for(let s=0;s<t.length;s++)for(let i=0;i<t[s].length;i++){const e=t[s][i];e&&(t[s][i]=void 0,this._chipsPool.killAndHide(e),e.active=!1,e.visible=!1)}}if(this._tileBoard&&this._tileBoard.length>0)for(const t of this._tileBoard)this._tilePool.killAndHide(t),t.active=!1,t.visible=!1}_spawn(){const t=this._board=[],s=this._tileBoard=[],i=this._m3model.generateNewModel(this._lvlModel.lvlDifficulty);this._m3model.model=i,this.updateBoardComponent.spawn(this._chipsPool,this._tilePool,this._boardContainer,this._tileContainer,t,s,i)}findWins(){const t=this.findWinClustersComponent.getWinClusters(this._m3model.model,u.WIDTH,u.HEIGHT);t.length>0?this._collectWinSectors(t):this._nextStep()}_onTrySwap(){const t=this._m3model.model,s=this.findWinClustersComponent.getWinClusters(t,u.WIDTH,u.HEIGHT);s.length>0?this._collectWinSectors(s):(this.swapComponent.eventsBus.once(l.CHIPS_SWAPPED,this._nextStep,this),this.swapComponent.swapBack(this._board,t))}_nextStep(){this._lvlModel.isWin?this.eventsBus.emit(l.WIN):this._waitUserAction()}_waitUserAction(){this.uiBoardEventsBus.once(l.USER_ACTION_SHUFFLE,this._playShuffle,this),this.uiBoardEventsBus.emit(l.AWAIT_USER_ACTION),this.swapComponent.eventsBus.once(l.CHIPS_SWAPPED,this._onTrySwap,this),this.swapComponent.eventsBus.once(l.CHIPS_START_SWAP,this._disableWaitUserAction,this),this.swapComponent.awaitSwap(this._board,this._m3model.model)}_disableWaitUserAction(){this.uiBoardEventsBus.off(l.USER_ACTION_SHUFFLE,this._playShuffle,this),this.uiBoardEventsBus.emit(l.USER_ACTION_SWAP)}_playShuffle(){this.swapComponent.eventsBus.off(l.CHIPS_SWAPPED,this._onTrySwap,this),this.swapComponent.eventsBus.off(l.CHIPS_START_SWAP,this._disableWaitUserAction,this),this.swapComponent.disableUserActions(),this.shuffleComponent.eventsBus.once(l.SHUFFLE,this._onShuffle,this),this.shuffleComponent.shuffle(this._board,this._m3model.model,this._tweens)}_onShuffle(){this.findWins()}_collectWinSectors(t){this._wins=t,this.boardCollectWinsComponent.eventsBus.once(l.CHIP_COLLECTED,this._onCollected,this),this.boardCollectWinsComponent.collectWinSectors(this._board,t)}_onCollected(){const t=this._m3model.model;this.updateBoardComponent.updateModel(this._wins,this._m3model.model,this._board);const s=this._m3model.generateNewModel(this._lvlModel.lvlDifficulty,!1);this.updateBoardComponent.spawnNewChips(this._chipsPool,t,s,this._board,this._boardContainer),this.dropChipsComponent.eventsBus.once(l.CHIPS_DROPPED,this.findWins,this),this.dropChipsComponent.drop(this._board,this._tweens)}_onChipRemoved(t){this._board[t.gridX][t.gridY]=void 0,this._chipsPool.killAndHide(t),t.active=!1,t.visible=!1,this.uiBoardEventsBus.emit(l.CHIP_REMOVED,t.typeID)}resetComponent(){this._returnAllChips(),this.swapComponent.disableUserActions()}}class O extends v{constructor(t){super(),s(this,"_chip"),this._chip=t}playCollect(){const t=this._chip;t.on("animationcomplete",this._onCompleteAnimation,this),t.play(t.typeID)}_onCompleteAnimation(){this.eventsBus.emit(l.CHIP_COLLECTED,this._chip)}}class A extends Phaser.GameObjects.Sprite{constructor(...t){super(...t),s(this,"animationComponent"),s(this,"eventsBus",new _),s(this,"_typeID"),s(this,"_gridX"),s(this,"_gridY"),s(this,"_isMoving"),s(this,"startDrag"),this.animationComponent=new O(this)}get dropPositionX(){return 48+this._gridX*a}get dropPositionY(){return 48+this._gridY*r}get gridX(){return this._gridX}get gridY(){return this._gridY}get typeID(){return this._typeID}get isMoving(){return this._isMoving}set isMoving(t){this._isMoving=t}spawn(t,s,i){this._typeID=i,this.setPosition(48+t*a,48+s*r),this._setGridPosition(t,s)}_setGridPosition(t,s){this._gridX=t,this._gridY=s}spawnAbove(t,s,i,e){this._typeID=e,this.setPosition(48+t*a,48+i*r),this._isMoving=!0,this.active=!0,this.visible=!0,this.setTexture(e),this._setGridPosition(t,s)}setNewGridPosition(t,s){this._gridX=t,this._gridY=s}awaitSwap(){this.setInteractive(),this.on("pointerdown",this._onPointed,this)}disableInput(){this.disableInteractive(),this.off("pointerdown",this._onPointed,this)}_onPointed(t){this.startDrag={x:t.x,y:t.y},this.eventsBus.emit(l.CHIP_POINTED,this)}}class x extends Phaser.GameObjects.Graphics{constructor(...t){super(...t),this.fillStyle(16777215,.75),this.fillRoundedRect(0,0,a,r,32),this.visible=!1}setPositionOnGrid(t,s){this.setPosition(t*a,s*r)}}class D extends Phaser.GameObjects.Container{constructor(...t){super(...t),s(this,"_bg"),s(this,"_goalText");const i=this._bg=this.scene.add.sprite(0,0,"chip_1");i.setOrigin(.5);const e=this.scene.add.sprite(0,0,"sticker");e.setOrigin(.5,.5),e.setScale(.6,.6),e.setPosition(-i.width/2+15,i.height/2-15);const o=this._goalText=this.scene.add.text(e.x,e.y,"0",{fontFamily:"SnowDream",fontSize:"24px",fontStyle:"normal",color:"#FF0100"});o.setOrigin(.5,.5),this.add(i),this.add(e),this.add(o),this.alpha=0,this.scene.add.existing(this)}resetGoal(t,s){this._bg.setTexture(t),this._goalText.text=s.toString(),this.alpha=1,this.scaleX=0,this.scaleY=0}setGoal(t){let s=t;t<=0&&(this.alpha=.5,s=0),this._goalText.text=s.toString()}}const H=[{x:-96,y:76},{x:0,y:76},{x:a,y:76}];class T extends Phaser.GameObjects.Container{constructor(...t){super(...t),s(this,"eventsBus",new _),s(this,"_buble"),s(this,"_header"),s(this,"_goalsUi",[]),s(this,"_lvlGoal");const i=this._buble=this.scene.add.sprite(0,0,"popup_buble");i.setOrigin(.5,0),i.setScale(4,3),i.alpha=0,this.add(i);const e=this._header=this.scene.add.sprite(0,5,"popup_header");e.alpha=0,e.setOrigin(.5,.5),e.setScale(.9,1),this.add(e);for(const{x:s,y:o}of H){const t=new D(this.scene);t.setPosition(s,o),this._goalsUi.push(t),this.add(t)}this.scene.add.existing(this)}resetGoals(t){this._lvlGoal=new Map;let s=0;for(const{type:i,goal:e}of t)this._goalsUi[s].resetGoal(i,e),this._lvlGoal.set(i,this._goalsUi[s]),s++}updateGoals(t){for(const{type:s,goal:i}of t)this._lvlGoal.get(s).setGoal(i)}show(){const t=this._goalsUi.length;let s=0;for(const i of this._goalsUi)s++,this.scene.tweens.add({targets:i,scale:1,duration:500,delay:250*(s+1),ease:"Back.easeOut",onComplete:t===s?this._onCompleteShow.bind(this):void 0});this.scene.tweens.add({targets:[this._buble,this._header],alpha:1,duration:250,ease:"Sine.easeInOut"})}_onCompleteShow(){this.eventsBus.emit(l.UI_READY)}reset(){this._buble.alpha=0,this._header.alpha=0;for(const t of this._goalsUi)t.alpha=0}}class U extends v{constructor(t,i,e,o){super(),s(this,"uiBoardEventsBus"),s(this,"_introScreen"),s(this,"_shuffleButton"),s(this,"_goalPopup"),this.uiBoardEventsBus=t,this._goalPopup=i,this._introScreen=e,this._shuffleButton=o,t.on(l.CHIP_REMOVED,this._chipCollected,this),o.makeInactive(),t.on(l.AWAIT_USER_ACTION,this._waitUserAction,this)}_waitUserAction(){this.uiBoardEventsBus.once(l.USER_ACTION_SWAP,this._onAction,this);const t=this._shuffleButton;t.eventsBus.once(l.SHUFFLE,this._onShuffle,this),t.makeActive()}_onShuffle(){this.uiBoardEventsBus.off(l.USER_ACTION_SWAP,this._onAction,this),this.uiBoardEventsBus.emit(l.USER_ACTION_SHUFFLE)}_onAction(){this.uiBoardEventsBus.off(l.USER_ACTION_SWAP,this._onAction,this),this._shuffleButton.eventsBus.off(l.SHUFFLE,this._onShuffle,this),this._shuffleButton.makeInactive()}startGame(){const t=this._introScreen;t.eventsBus.once(l.UI_CHOOSE_DIF,this._onChooseDifficulty,this),t.show()}_onChooseDifficulty(t){this._lvlModel.lvlDifficulty=t;const s=this._introScreen;s.eventsBus.once(l.UI_READY,this._playNewLvl,this),s.hide()}_playNewLvl(){this._lvlModel.getNewGoals(),this.uiBoardEventsBus.once(l.CHIPS_DROPPED,this._showUI,this),this.uiBoardEventsBus.emit(l.UI_CHOOSE_DIF)}_showUI(){const t=this._goalPopup;t.eventsBus.once(l.UI_READY,this._goalUIReady,this),this._goalPopup.resetGoals(this._lvlModel.goals),t.show(),this._shuffleButton.show()}_goalUIReady(){this.uiBoardEventsBus.emit(l.UI_READY)}_chipCollected(t){this._lvlModel.minusChip(t)&&this._goalPopup.updateGoals(this._lvlModel.goals)}resetComponent(){const t=this.uiBoardEventsBus;t.off(l.USER_ACTION_SWAP,this._onAction,this),t.off(l.CHIPS_DROPPED,this._showUI,this),this._goalPopup.eventsBus.off(l.UI_READY,this._goalUIReady,this),this._introScreen.eventsBus.off(l.UI_READY,this._playNewLvl,this),this._shuffleButton.eventsBus.off(l.SHUFFLE,this._onShuffle,this),this._goalPopup.reset(),this._shuffleButton.hide()}}class M extends Phaser.GameObjects.Container{constructor(...t){super(...t),s(this,"eventsBus",new _),s(this,"_bg"),s(this,"_baseScale",1),this.scene.add.existing(this)}_playClick(){this.scene.tweens.add({targets:this,duration:125,scale:.8*this._baseScale,yoyo:!0,ease:"Back.easeInOut"})}}const Y=["Easy","Normal","Hard"];class G extends M{constructor(...t){super(...t),s(this,"_text"),s(this,"_difficulty",0);const i=this._bg=this.scene.add.sprite(0,0,"intro_button");i.setScale(2),i.setOrigin(.5);const e=this._text=this.scene.add.text(0,0,"0",{fontFamily:"SnowDream, sans-serif",fontSize:"68px",fontStyle:"normal",color:"#FF0100"});e.setOrigin(.5,.5),this.add(i),this.add(e),this.alpha=1}setLvl(t){this._difficulty=t,this._text.text=Y[t]}makeActive(){this._bg.setInteractive(),this._bg.on("pointerdown",this._onChoose,this)}makeInactive(){this._bg.disableInteractive(),this._bg.off("pointerdown",this._onChoose,this)}_onChoose(){this.eventsBus.emit(l.UI_CHOOSE_DIF,this._difficulty),this._playClick()}}const R=[{x:0,y:-192},{x:0,y:0},{x:0,y:192}];class W extends Phaser.GameObjects.Container{constructor(...t){super(...t),s(this,"eventsBus",new _),s(this,"_lvls",[]),s(this,"_bg");const i=this._bg=this.scene.add.rectangle(0,0,2304,1920,4519927);i.setOrigin(.5),i.alpha=0,this.add(i);for(const{x:s,y:e}of R){const t=new G(this.scene);t.setPosition(s,e),this.add(t),this._lvls.push(t)}this.scene.add.existing(this),this.visible=!1,this.active=!1}show(){this.visible=!0,this.active=!0;const t=this._bg;t.alpha=0,this.scene.tweens.add({targets:t,duration:250,alpha:1,ease:"Sine.easeInOut"});const s=this._lvls.length;let i=0;for(const e of this._lvls)e.setLvl(i),e.setScale(10),e.alpha=0,i++,this.scene.tweens.add({targets:e,scale:1,alpha:1,duration:250,delay:250*(i+1),ease:"Back.easeOut",onComplete:s===i?this._onCompleteShow.bind(this):void 0})}hide(){this.scene.tweens.add({targets:this,alpha:0,duration:350,delay:500,ease:"Sine.easeInOut",onComplete:this._onCompleteHide.bind(this)})}_onCompleteHide(){this._bg.alpha=0,this.alpha=1,this.visible=!1,this.active=!1,this.eventsBus.emit(l.UI_READY)}_onCompleteShow(){for(const t of this._lvls)t.eventsBus.once(l.UI_CHOOSE_DIF,this._onChoose,this),t.makeActive()}_onChoose(t){for(const s of this._lvls)s.eventsBus.removeAllListeners(),s.makeInactive();this.eventsBus.emit(l.UI_CHOOSE_DIF,t)}}class N extends M{constructor(...t){super(...t),this._baseScale=2;const s=this._bg=this.scene.add.sprite(0,0,"button_shuffle");s.setOrigin(.5),this.add(s),this.setScale(this._baseScale),this.alpha=0}makeActive(){this._bg.setInteractive(),this._bg.on("pointerdown",this._onClick,this)}makeInactive(){this._bg.disableInteractive(),this._bg.off("pointerdown",this._onClick,this),this.eventsBus.removeAllListeners()}_onClick(){this.eventsBus.emit(l.SHUFFLE),this._playClick()}show(){this.scale=2*this._baseScale,this.scene.tweens.add({targets:this,scale:this._baseScale,alpha:1,duration:250,ease:"Bounce.Out",delay:500})}hide(){this.alpha=0}}class k extends Phaser.GameObjects.Sprite{spawn(t,s){this.setPosition(48+t*a,48+s*r),this.active=!0,this.visible=!0}}class L extends e.Scene{constructor(){super("Game"),s(this,"camera"),s(this,"_uiComponent"),s(this,"_boardComponent")}create(){this.camera=this.cameras.main,this.scale.on("resize",this.resize,this),this.resize({width:window.innerWidth,height:window.innerHeight}),this.initGame()}initGame(){const t=new _;this._createBoard(t),this._createUI(t),this._boardComponent.eventsBus.once(l.WIN,this._restartGame,this),this._boardComponent.startGame(),this._uiComponent.startGame()}_restartGame(){const t=this._uiComponent,s=this._boardComponent;t.resetComponent(),s.resetComponent(),s.eventsBus.once(l.WIN,this._restartGame,this),s.startGame(),t.startGame()}_createUI(t){const s=new T(this);s.setPosition(192,r*(u.HEIGHT+1)-15);const i=new N(this,0,0);i.setPosition(576,r*(u.HEIGHT+2)-15);const e=new W(this);e.setPosition(384,384),this._uiComponent=new U(t,s,e,i)}_createBoard(t){const s=this.add.container();s.setPosition(0,48);const i=this.add.container();i.setPosition(0,48);const e=this._createBoardBgVfx(i),o=this.add.group({classType:k,maxSize:g}),n=this.add.group({classType:A,maxSize:g});this._boardComponent=new E(t,n,o,i,s,e,this.tweens,this.input)}_createBoardBgVfx(t){const{WIDTH:s,HEIGHT:i}=u,e=[];for(let o=0;o<s;o++){e.push([]);for(let s=0;s<i;s++){const i=new x(this);t.add(i),i.setPositionOnGrid(o,s),e[o].push(i)}}return e}resize(t){const{width:s,height:i}=t,e=s,o=i,n=Math.min(e/768,o/1024);this.cameras.main.setZoom(n),this.cameras.main.centerOn(384,512)}}class F extends e.Scene{constructor(){super("MainMenu"),s(this,"background"),s(this,"logo"),s(this,"title")}create(){const t=this.logo=this.add.image(this.scale.width/2,this.scale.height/2,"logo");t.alpha=0,t.scale=5,this.tweens.add({targets:t,scale:.5,alpha:1,duration:1500,ease:"Bounce.Out",delay:250,onComplete:this._onShowed.bind(this)})}_onShowed(){this.tweens.add({targets:this.logo,scale:5,alpha:0,duration:500,ease:"Sine.Out",delay:500,onComplete:this._onHide.bind(this)})}_onHide(){this.scene.start("Game")}}class X extends e.Scene{constructor(){super("Preloader")}init(){const t=this.add.rectangle(this.scale.width/2-200,this.scale.height/2,4,28,16777215);this.load.on("progress",(s=>{t.width=4+460*s}))}preload(){this.load.image("logo","assets/logo.png"),this.load.pack("assets_pack","data/assets.json")}create(){this._createAnimations(),this.scene.start("MainMenu")}_createAnimations(){let t=1;const s=this.cache.json.get("animations_json");for(const i of s)this.anims.create({key:"chip_"+t,frames:Array.from({length:i.len},((t,s)=>({key:`explosion_${i.type}_${s}`}))),frameRate:i.frameRate,repeat:i.repeat,hideOnComplete:!0}),t++}}const V={type:e.AUTO,width:h,height:1024,parent:"game-container",backgroundColor:"#028af8",scene:[o,X,F,L,n],scale:{mode:Phaser.Scale.NONE,autoCenter:Phaser.Scale.NO_CENTER}};document.addEventListener("DOMContentLoaded",(()=>{(()=>{const t=new e.Game({...V,parent:"game-container"});t.scale.resize(window.innerWidth,window.innerHeight),window.addEventListener("resize",(()=>{t.scale.resize(window.innerWidth,window.innerHeight)}))})()}));
